    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/js/all.min.js"></script>
    <script type="text/javascript">
        const values = {};
        const events = {};

        function watch(key, callback) {
            if (!events[key])
                events[key] = [];

            events[key].push(callback);
        }

        function trigger(key) {
            if (events[key])
                events[key].forEach(callback => callback(key, values[key]));
        }

        function update(key, value) {
            document.getElementById(key).innerText = value;
        }

        function safeHtmlEntities(str) {
            return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>');
        }

        function updateWithUnityColor(key, value) {
            const regex = /(<#([0-9A-Fa-f]{3}){1,2}>)/;
            const segments = safeHtmlEntities(value).split(regex);
            const result = [];

            if (segments.length === 1) {
                result.push(value);
            } else {
                let currentColor = null;
                for (let i = 0; i < segments.length; i++) {
                    const segment = segments[i];

                    if (segment.startsWith('<#')) {
                        currentColor = segment.slice(2, -1);
                    } else {
                        if (currentColor) {
                            result.push(`<font color="#${currentColor}">`);
                            currentColor = null;
                        } else {
                            result.push(segment);
                        }
                    }
                }
            }

            const html = result.join('');
            document.getElementById(key).innerHTML = html;
        }

        function updateWithHref(key, value) {
            document.getElementById(key).innerText = value;
            document.getElementById(key).href = `guvrs://open?guid=${value}`;
            document.getElementById(`${key}_COPY`).href = `guvrs://copy?guid=${value}`;
        }

        document.querySelector('.settings-btn').addEventListener('click', function () {
            document.getElementById('settings-overlay').style.display = 'block';
        });

        document.getElementById('cancel-settings').addEventListener('click', function () {
            document.getElementById('settings-overlay').style.display = 'none';
        });

        document.getElementById('settings-open-folder').addEventListener('click', function () {
            location.href = "guvrs://open-settings-folder";
        });

        document.getElementById('save-settings').addEventListener('click', function () {
            document.getElementById('settings-overlay').style.display = 'none';
            location.href = `guvrs://save-settings?theme=${document.getElementById('dropdown-setting').value}&site=${document.getElementById('dropdown-setting-site').value}&auto-open=${document.getElementById('auto-open-toggle').checked}`;
        });

        document.oncontextmenu = function () {
            return false;
        };

        function guvrs_set_settings(theme, autoOpen, site) {
            document.getElementById('dropdown-setting').value = theme;
            document.getElementById('dropdown-setting-site').value = site;
            document.getElementById('auto-open-toggle').checked = autoOpen;
            document.getElementById('auto-open-toggle').dispatchEvent(new Event('change'));
        }

        function guvrs_set_value(key, value) {
            values[key] = value;
            trigger(key);
        }

        location.href = "guvrs://load-settings";
        watch("GUVRS_GAME_ID", (key, value) => update(key, value));

        watch("GUVRS_PLAYER_NAME", (key, value) => updateWithUnityColor(key, value));
        watch("GUVRS_PLAYER_GUID", (key, value) => updateWithHref(key, value));
        watch("GUVRS_PLAYER_RATING", (key, value) => update(key, value));
        watch("GUVRS_PLAYER_WINPOINTS", (key, value) => update(key, value));
        watch("GUVRS_PLAYER_LOSSPOINTS", (key, value) => update(key, value));

        watch("GUVRS_OPPONENT_NAME", (key, value) => updateWithUnityColor(key, value))
        watch("GUVRS_OPPONENT_GUID", (key, value) => updateWithHref(key, value));
        watch("GUVRS_OPPONENT_RATING", (key, value) => update(key, value));
        watch("GUVRS_OPPONENT_WINPOINTS", (key, value) => update(key, value));
        watch("GUVRS_OPPONENT_LOSSPOINTS", (key, value) => update(key, value));
    </script>
  </body>

</html>